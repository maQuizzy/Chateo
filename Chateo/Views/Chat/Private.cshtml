@model Chat

@{
    ViewBag.Title = "Chat"; 
}

<link rel="stylesheet" asp-href-include="css/chat.css">

<div class="chat">
    <div class="chat__message-history" id="chat-history">
        @await Html.PartialAsync("Messages",Model.Messages)
    </div>
</div>

@section scripts
{
    <script src="~/lib/microsoft/signalr/dist/browser/signalr.min.js"></script>
    <script src="~/js/messageBuilder.js"></script>
    <script>
        let chatHistory = document.getElementById("chat-history");
        chatHistory.scrollTop = chatHistory.scrollHeight;
    </script>
    <script>
        const otherUser = "@ViewBag.ChatTitle";

        const hubConnection = new signalR.HubConnectionBuilder()
            .withUrl("/Chathub")
            .build();

        hubConnection.start()
            .then(function () {
                hubConnection.invoke("JoinChat", "@Model.Id");
            });

        hubConnection.on("ReceiveMessage", function (text, userName) {
            let messageBlock;

            if (userName == otherUser) {
                messageBlock = CreateOtherMessage(text);
            }
            else {
                messageBlock = CreateSelfMessage(text);
            }

            document.getElementById("chat-history").appendChild(messageBlock);

            messageBlock.scrollIntoView();
        });
    </script>
    <script>
        function sendMessageFormSubmit() {
            $('#sendMessageForm').submit();
            $('#send-message').val('');
        }

        document.getElementById('send-button').addEventListener('click', sendMessageFormSubmit);
        document.getElementById('sendMessageForm').addEventListener('submit', e => {
            e.preventDefault();
            sendMessageFormSubmit();
        });
    </script>
    <script>
        let page = 0;

        let loadMessages = function () {
            if (page > -1) {
                page++;
                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("Index", "Chat")?chatId=@Model.Id&pageNumber=' + page,
                    success: function (data, textstatus) {
                        if ($.trim(data)) {
                            $("#chat-history").prepend(data);
                        }
                        else {
                            page = -1;
                        }
                    }
                });
            }
        }

        $("#chat-history").scroll(function () {
            if (chatHistory.scrollHeight - chatHistory.scrollTop == chatHistory.clientHeight) {
                $("#chat-history").scroll(function () {
                    if ($("#chat-history").scrollTop() <= 300) {
                        loadMessages();
                    }
                });
            }
        });

    </script>
}